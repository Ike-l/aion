access_checked_heap/mod.rs (todo)
blacklists todo
systems

trait TickSystem {
    async fn(&mut self, memory: &Memory);
}

order:
impl TickSystem for EventManager;
impl TickSystem for NewEventManager; (i.e if x event then spawn event y)
impl TickSystem for Processor;
# Background Threads after Processor; (has its own SystemRegistry and StoredSystem for background threads)

EventManager
NewEventManager: After(EventManager)|Before(Processor)
Processor: After(EventManager)

move blockers update to Processor; since blocking systems
impl TickSystem for BlockerManager;

in Memory: 
StoredTickSystem: Box<dyn TickSystem>
// Can only be modified with a key (privileged)
TickSystemRegistry: HashMap<Id, TickSystemMetadata>

in StateMachine::tick

If TickSystemRegistry change:
rebuild execution graph

turn execution graph into iter then 
for each system in memory::TickSystemRegistry
run each system *Sequentially*